name: Check Network Upgrades

on:
  schedule:
    # Run every day at 7:00 AM UTC
    - cron: '0 7 * * *'
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write
  pull-requests: write

jobs:
  check-upgrades:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r scripts/check_upgrades/requirements.txt

      - name: Check for network upgrades
        id: check_upgrades
        run: |
          # Run script and capture output to both console and file
          python scripts/check_upgrades/check_upgrades.py 2>&1 | tee /tmp/upgrade_check.log
          
          # Check if updates were made based on log content
          if grep -q "Updates made to at least one network configuration" /tmp/upgrade_check.log; then
            echo "UPDATES_MADE=true" >> $GITHUB_ENV
          else
            echo "UPDATES_MADE=false" >> $GITHUB_ENV
          fi
          
          # Check if there were any errors (exit code)
          if [ ${PIPESTATUS[0]} -ne 0 ]; then
            echo "Script execution failed"
            exit 1
          fi

      - name: Check existing PRs
        if: env.UPDATES_MADE == 'true'
        id: check_pr
        run: |
          # Check only for open PRs (including drafts) with the exact title
          PR_EXISTS=$(gh pr list --state open --json title --jq 'map(select(.title == "Update network configuration after upgrade")) | length')
          if [ "$PR_EXISTS" -gt 0 ]; then
            echo "PR_EXISTS=true" >> $GITHUB_ENV
            echo "Open PR for network configuration update already exists, skipping PR creation."
          else
            echo "PR_EXISTS=false" >> $GITHUB_ENV
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request
        if: env.UPDATES_MADE == 'true' && env.PR_EXISTS == 'false'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.PR_AUTOMATION_GIT_TOKEN }}
          commit-message: "chore: update network configuration after upgrade"
          title: "Update network configuration after upgrade"
          body: |
            This PR updates network configuration files to reflect completed blockchain upgrades.
            
            - Updates version.txt files with new version numbers
            - Updates meta.json files with new binary information
            - Updates README.md with new version information
            
            This PR was automatically generated by the scheduled network upgrade checker.
          branch: auto/network-upgrade-updates
          base: main
          draft: true
          labels: automation, network-upgrade
          delete-branch: true
